<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
  'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>

<mapper namespace='tw.com.pai.dao.mybatis.MUserMapper'>

<!--   <select id='getUserById' parameterType='int' resultType='tw.com.pai.model.User'> -->
<!--      SELECT  -->
<!--       id ,  -->
<!--       email_id as emailId ,  -->
<!--       password,  -->
<!--       first_name as firstName,  -->
<!--       last_name as lastName -->
<!--      FROM USER  -->
<!--      WHERE id = #{id} -->
<!--   </select> -->
  <!-- Instead of referencing Fully Qualified Class Names we can register Aliases in mybatis-config.xml and use Alias names. -->
   <resultMap type='MUser' id='UserResult'>
    <id property='id' column='id'/>
    <result property='email' column='email'/>
<!--     <result property='password' column='password'/> -->
    <result property='firstName' column='first_name'/>
    <result property='lastName' column='last_name'/>   
   </resultMap>

  <select id='getAllUsers' resultMap='UserResult'>
   SELECT * FROM USERS
  </select>

  <insert id='insertUser' parameterType='MUser' useGeneratedKeys='true' keyProperty='id'>
	INSERT INTO USERS(email, first_name, last_name)
	VALUES(#{email}, #{firstName}, #{lastName})
  </insert>

  <update id='updateUser' parameterType='MUser'>
    UPDATE USERS
    SET
     FIRST_NAME = #{firstName},
     LAST_NAME = #{lastName}
    WHERE id = #{id}
  </update>

<!--   <delete id='deleteUser' parameterType='int'> -->
<!--     DELETE FROM USER WHERE id = #{id} -->
<!--   </delete> -->

</mapper>